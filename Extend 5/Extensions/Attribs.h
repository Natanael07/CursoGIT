//  Contains the procedures used to manage Extend's discrete event attribute interface
//
//			modified 	6/21/00  DJK modified createAttribArray to create the _cost Global Array if the _cost or _rate attributes are used

Procedure CheckShowAttrib()		// shows the attribute name on the icon if this option is turned on in the executive or dialog{integer exec;	if(BlockName(SysGlobalInt1) == "Executive")		exec = SysGlobalInt1;	else		exec = FindBlock("executive",2,FALSE,FALSE,TRUE);	if(exec > 0)		SetDialogVariable(MyBlockNumber(),"ShowAttribName",GetDialogVariable(exec,"ShowAttribName",0,0),0,0);} integer calcSystemAttribs()		// calculates the number of system attributes{integer numSys;	NumSys = 1;					// there is always one animation attribute	if(GaGetIndex("_cost") >= 0)		{		CostAttrib = sysGlobalInt17 + 1;		// the cost attribute is the number of user attribs + 1		RateAttrib = sysGlobalInt17 + 2;		// the rate attribute is the number of user attribs + 2		numSys = 3;								// number of system attributes is 3		DestAttrib = sysGlobalInt17 + 3;		// new stuff for the future		MessageAttrib = sysGlobalInt17 + 4;		OriginAttrib = sysGlobalInt17 + 5;		SizeAttrib = sysGlobalInt17 + 6;		StartAttrib = sysGlobalInt17 + 7;		if(GaGetIndex("_NetworkTraffic") >= 0)			NumSys = 8;		}	else if(GaGetIndex("_NetworkTraffic") >= 0)		{		CostAttrib = sysGlobalInt17 + -1;		RateAttrib = sysGlobalInt17 + -2;		DestAttrib = sysGlobalInt17 + 1;		MessageAttrib = sysGlobalInt17 + 2;		OriginAttrib = sysGlobalInt17 + 3;		SizeAttrib = sysGlobalInt17 + 4;		StartAttrib = sysGlobalInt17 + 5;		NumSys = 6;		}	return(numSys);}integer CalcAttrib(String ThisAttrib)		// calculates the attribute index offset for system attributes (in initsim){	if(ThisAttrib == "_cost" || ThisAttrib == "_rate")
		{

		return(1);
		}	else if(GaGetIndex("_cost") >= 0)		return(2);	else		return(1);}String SetSystemAttrib(integer AttribPopValue)		// sets the name of the attribute for a system attribute{String ReturnName;String NetworkOffset;		if(GaGetIndex("_NetworkTraffic") >= 0)		// new stuff			NetworkOffset = TRUE;		else			NetworkOffset = FALSE;		if(GaGetIndex("_cost") >= 0)				// is costing turned on?			{			if(attribPopvalue == (NumNames + 2))		// _cost attribute				ReturnName = "_cost";			else if(attribPopvalue == (NumNames + 3))	// _rate attribute				ReturnName = "_rate";			else if(attribPopvalue == (NumNames + 5))				ReturnName = "_destination";			else if(attribPopvalue == (NumNames + 6))				ReturnName = "_message";			else if(attribPopvalue == (NumNames + 7))				ReturnName = "_origin";			else if(attribPopvalue == (NumNames + 8))				ReturnName = "_size";			else if(attribPopvalue == (NumNames + 9))				ReturnName = "_startTime";			}		else			{			if(attribPopvalue == (NumNames + 2))				ReturnName = "_destination";			else if(attribPopvalue == (NumNames + 3))				ReturnName = "_message";			else if(attribPopvalue == (NumNames + 4))				ReturnName = "_origin";			else if(attribPopvalue == (NumNames + 5))				ReturnName = "_size";			else if(attribPopvalue == (NumNames + 6))				ReturnName = "_startTime";			}	return(ReturnName);}integer checkReserved(String TestAttrib)		// returns true if this is a reserved attribute{	if(TestAttrib == "_cost" || TestAttrib == "_rate" || TestAttrib == "_destination" || TestAttrib == "_message"
	 || TestAttrib == "_origin" || TestAttrib == "_size" || TestAttrib == "_startTime")
		return(1);	else		return(0);}integer CalcOffset(String ThisAttrib)		// calculates the offset necessary when building up the attribute popup menu{integer PopupOffset;	popupOffset = 0;	if  ( GaGetIndex("_NetworkTraffic") >= 0 )		popupOffset += 6;	if(GaGetIndex("_cost") >= 0)		popupOffset += 3;	return(Popupoffset);}procedure createAttribArray(string AttribName)		// populates the array which stores the names of the attributes{integer ArrayIndex;integer error;integer found;	
	if(GetSimulationPhase() != 3 || CurrentSim == 0)
		{
		if((AttribName == "_cost" || AttribName == "_rate") && GaGetIndex("_cost") < 0)	// if this is a costing attribute, make sure that the _cost global array exists
			GACreate("_cost",1,1);
			if(attribName == "" || checkReserved(AttribName))		// we dont need to add blank or costing attributes to the list of user attributes			return;		ArrayIndex = GaGetIndex("_AttributeList");		found = GAFindStringAny(AttribListIndex,
AttribName,0,GaGetRowsByIndex(ArrayIndex),StrLen(AttribName),
FALSE);		if(Found < 0 )
			{			GAResize("_AttributeList",GaGetRowsByIndex(ArrayIndex)+1);			error = gaSetString15(attribName,AttribListIndex,GaGetRowsByIndex(ArrayIndex)-1,0);			}
		}}		procedure buildAttribList(string AttribDialog, string popupname,integer sort){integer popupOffset;		// position of the "new attribute" entry in the popup listString15	ThisAttribute;	// name of the attributeinteger InitPop;			// currentpopup menu valueinteger ThisPopup;			// popup value
	ThisAttribute = getDialogVariable(myblockNumber(),AttribDialog ,0,0);	// get the current Attribute name	PopupOffset = CalcOffset(ThisAttribute);					numNames = GAGetRows("_AttributeList");							// get the number of different attribute names in the model		if(sort)		GaSort(AttribListIndex,numNames,0,TRUE,FALSE);		// sort the list of attribute names		InitPop = StrToReal(GetDialogVariable(myblockNumber(),PopupName,0,0));	// get the current value of the attribute popup	GAPopupmenu(AttribListIndex,PopupName,numnames,InitPop,FALSE);		// create the popup menu	if(GaGetIndex("_cost") >= 0)												// add cost and rate attributes to the popup menu		appendPopupLabels(PopupName,"-;_cost;_rate;");	if (GAGetIndex("_NetworkTraffic") >= 0)		appendPopupLabels(PopupName, "-;_destination;_message;_origin;_size;_startTime;");		appendPopupLabels(popupname,"-;New attribute;None");			// add new and none to the popup menu	if(ThisAttribute == "")											// no attribute specified		{		setDialogVariableNoMsg(myblocknumber(),popupname,NumNames+CalcOffset(ThisAttribute)+3,0,0);		}	else if(checkReserved(ThisAttribute))					// is this a reserved attribute		{		if(ThisAttribute == "_cost")			setDialogVariableNoMsg(myblocknumber(),popupname,NumNames+2,0,0);		else if (ThisAttribute == "_rate")			setDialogVariableNoMsg(myblocknumber(),popupname,NumNames+3,0,0);		else if (ThisAttribute == "_destination")			setDialogVariableNoMsg(myblocknumber(),popupname,numNames +PopupOffset - 4,0,0);		else if (ThisAttribute == "_message")			setDialogVariableNoMsg(myblocknumber(),popupname,numNames +PopupOffset - 3,0,0);		else if (ThisAttribute == "_origin")			setDialogVariableNoMsg(myblocknumber(),popupname,numNames +PopupOffset - 2,0,0);		else if (ThisAttribute == "_size")			setDialogVariableNoMsg(myblocknumber(),popupname,numNames +PopupOffset - 1,0,0);		else if (ThisAttribute == "_starttime")			setDialogVariableNoMsg(myblocknumber(),popupname,numNames +PopupOffset - 0,0,0);		}//	else if(ThisAttribute == "_cost")									// cost attribute//		setDialogVariableNoMsg(myblocknumber(),popupname,NumNames+2,0,0);//	else if(ThisAttribute == "_rate")									// rate attribute//		setDialogVariableNoMsg(myblocknumber(),popupname,NumNames+3,0,0);	else		{		ThisPopup = GAFindStringAny(AttribListIndex,ThisAttribute,0,numNames,15,FALSE);		setDialogVariableNoMsg(myblocknumber(),popupname,ThisPopup+1,0,0);		}	return;}Procedure ShowAttrib(String15 BaseName, Integer NumAttribs, Integer AnimObjNum, Integer ShowTheAttribs)// shows the attribute names above the icon{integer Width;integer orig_width;integer moveLeft;integer MoveUp;integer i;integer j;integer count;String15 ThisName;		for(i=0;i<NumAttribs;i++)			// hide all of the attribute names		{		AnimationHide(AnimObjNum + i,TRUE);		AnimationStretchTo(AnimObjNum + i,0,0,AnimationGetWidth(AnimObjNum + i,TRUE),AnimationGetHeight(AnimObjNum + i,TRUE),TRUE);		AnimationMoveTo(AnimObjNum + i,0,0,TRUE);		}	if(!ShowTheAttribs)				// if we are not showing the attributes return with the names hidden
		{
		return;		}		count = 0;	for(i=NumAttribs-1;i>=0;i--)		// Display all of the attribute names		{		if(NumAttribs > 1)			{			j = i+ 1;			ThisName = GetDialogVariable(MyBlockNumber(),BaseName+j,0,0);		// Get the attribute names if there are more than 1			}		else			{			ThisName = GetDialogVariable(MyBlockNumber(),BaseName,0,0);				// get the attribute name			}		if(ThisName != "")														// if there is a name			{			Width = TextWidth(ThisName,0,0,0);									// get the width of the attribute name			Orig_Width = AnimationGetWidth(AnimObjNum + count,TRUE);			// get the current width of the animation object			MoveLeft = -(Width - Orig_Width)/2;									// center the animation object			AnimationStretchTo(AnimObjNum + count,moveleft,0,Width,AnimationGetHeight(AnimObjNum + count,FALSE),TRUE); // make the animation object big enough to display the attribute name			AnimationMoveTo(AnimObjNum + count,moveleft,(-12 * (count+3)),TRUE);			// move the animation object up above the icon			animationTextTransparent(AnimObjNum + count,ThisName);		// show the attribute on the icon			AnimationShow(AnimObjNum + count);							// show the attribute			count++;			}		}}